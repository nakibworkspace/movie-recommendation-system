{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":6663,"sourceType":"datasetVersion","datasetId":3405}],"dockerImageVersionId":30761,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport seaborn as sns\nfrom scipy import stats\nfrom ast import literal_eval #Safely evaluates a string that contains a Python literal \nfrom sklearn.feature_extraction.text import TfidfVectorizer, CountVectorizer\nfrom sklearn.metrics.pairwise import linear_kernel, cosine_similarity\nfrom nltk.stem.snowball import SnowballStemmer\nfrom nltk.stem.wordnet import WordNetLemmatizer\nfrom nltk.corpus import wordnet\nfrom surprise import Reader, Dataset, SVD\nfrom surprise.model_selection import cross_validate\n\nimport warnings; warnings.simplefilter('ignore')","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-09-07T14:24:03.756727Z","iopub.execute_input":"2024-09-07T14:24:03.757303Z","iopub.status.idle":"2024-09-07T14:24:07.264232Z","shell.execute_reply.started":"2024-09-07T14:24:03.757240Z","shell.execute_reply":"2024-09-07T14:24:07.262931Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":"**TfidfVectorizer** converts a collection of raw documents to a matrix of TF-IDF (Term Frequency-Inverse Document Frequency) features.\n\n**CountVectorizer** simply counts the occurrences of each word in a document and creates a term-document matrix.\n\n**linear_kernel:** Computes the dot product between two vectors (similar to cosine_similarity but without normalization).\n\n**cosine_similarity:** Measures how similar two vectors are, using the cosine of the angle between them (commonly used in document similarity and recommendation systems).\n\n","metadata":{}},{"cell_type":"markdown","source":"**SnowballStemmer (from nltk.stem.snowball):**\nA stemming algorithm that reduces words to their base or root form. The SnowballStemmer is an improvement over the original Porter stemmer. It supports multiple languages.\n**WordNetLemmatizer (from nltk.stem.wordnet):**\nA lemmatizer from the NLTK package that reduces words to their dictionary form. Unlike stemming, lemmatization considers the context of the word and returns valid words (e.g., \"running\" becomes \"run\").\n**wordnet (from nltk.corpus):**\nWordNet is a lexical database for the English language, used for looking up synonyms, antonyms, and other word relations. It is widely used in NLP tasks.\n**Reader, Dataset, SVD, and evaluate (from surprise):**\nThese are used in the context of building recommendation systems using collaborative filtering techniques.\n**Reader:** Parses the data into a format that can be used by the surprise library.\n**Dataset:** Represents the dataset to be used for recommendation.\n**SVD:** A collaborative filtering algorithm using Singular Value Decomposition (SVD), which helps in making recommendations.\n**evaluate:** This function is used to evaluate a recommendation modelâ€™s performance (although in newer versions of surprise, it is replaced by cross_validate).","metadata":{}},{"cell_type":"code","source":"sr= pd.read_csv(\"/kaggle/input/the-movies-dataset/movies_metadata.csv\")\nsr.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:07.266879Z","iopub.execute_input":"2024-09-07T14:24:07.267614Z","iopub.status.idle":"2024-09-07T14:24:08.738206Z","shell.execute_reply.started":"2024-09-07T14:24:07.267543Z","shell.execute_reply":"2024-09-07T14:24:08.736849Z"},"trusted":true},"execution_count":2,"outputs":[{"execution_count":2,"output_type":"execute_result","data":{"text/plain":"   adult                              belongs_to_collection    budget  \\\n0  False  {'id': 10194, 'name': 'Toy Story Collection', ...  30000000   \n1  False                                                NaN  65000000   \n2  False  {'id': 119050, 'name': 'Grumpy Old Men Collect...         0   \n3  False                                                NaN  16000000   \n4  False  {'id': 96871, 'name': 'Father of the Bride Col...         0   \n\n                                              genres  \\\n0  [{'id': 16, 'name': 'Animation'}, {'id': 35, '...   \n1  [{'id': 12, 'name': 'Adventure'}, {'id': 14, '...   \n2  [{'id': 10749, 'name': 'Romance'}, {'id': 35, ...   \n3  [{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...   \n4                     [{'id': 35, 'name': 'Comedy'}]   \n\n                               homepage     id    imdb_id original_language  \\\n0  http://toystory.disney.com/toy-story    862  tt0114709                en   \n1                                   NaN   8844  tt0113497                en   \n2                                   NaN  15602  tt0113228                en   \n3                                   NaN  31357  tt0114885                en   \n4                                   NaN  11862  tt0113041                en   \n\n                original_title  \\\n0                    Toy Story   \n1                      Jumanji   \n2             Grumpier Old Men   \n3            Waiting to Exhale   \n4  Father of the Bride Part II   \n\n                                            overview  ... release_date  \\\n0  Led by Woody, Andy's toys live happily in his ...  ...   1995-10-30   \n1  When siblings Judy and Peter discover an encha...  ...   1995-12-15   \n2  A family wedding reignites the ancient feud be...  ...   1995-12-22   \n3  Cheated on, mistreated and stepped on, the wom...  ...   1995-12-22   \n4  Just when George Banks has recovered from his ...  ...   1995-02-10   \n\n       revenue runtime                                   spoken_languages  \\\n0  373554033.0    81.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n1  262797249.0   104.0  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...   \n2          0.0   101.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n3   81452156.0   127.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n4   76578911.0   106.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n\n     status                                            tagline  \\\n0  Released                                                NaN   \n1  Released          Roll the dice and unleash the excitement!   \n2  Released  Still Yelling. Still Fighting. Still Ready for...   \n3  Released  Friends are the people who let you be yourself...   \n4  Released  Just When His World Is Back To Normal... He's ...   \n\n                         title  video vote_average vote_count  \n0                    Toy Story  False          7.7     5415.0  \n1                      Jumanji  False          6.9     2413.0  \n2             Grumpier Old Men  False          6.5       92.0  \n3            Waiting to Exhale  False          6.1       34.0  \n4  Father of the Bride Part II  False          5.7      173.0  \n\n[5 rows x 24 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adult</th>\n      <th>belongs_to_collection</th>\n      <th>budget</th>\n      <th>genres</th>\n      <th>homepage</th>\n      <th>id</th>\n      <th>imdb_id</th>\n      <th>original_language</th>\n      <th>original_title</th>\n      <th>overview</th>\n      <th>...</th>\n      <th>release_date</th>\n      <th>revenue</th>\n      <th>runtime</th>\n      <th>spoken_languages</th>\n      <th>status</th>\n      <th>tagline</th>\n      <th>title</th>\n      <th>video</th>\n      <th>vote_average</th>\n      <th>vote_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>False</td>\n      <td>{'id': 10194, 'name': 'Toy Story Collection', ...</td>\n      <td>30000000</td>\n      <td>[{'id': 16, 'name': 'Animation'}, {'id': 35, '...</td>\n      <td>http://toystory.disney.com/toy-story</td>\n      <td>862</td>\n      <td>tt0114709</td>\n      <td>en</td>\n      <td>Toy Story</td>\n      <td>Led by Woody, Andy's toys live happily in his ...</td>\n      <td>...</td>\n      <td>1995-10-30</td>\n      <td>373554033.0</td>\n      <td>81.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>NaN</td>\n      <td>Toy Story</td>\n      <td>False</td>\n      <td>7.7</td>\n      <td>5415.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>NaN</td>\n      <td>65000000</td>\n      <td>[{'id': 12, 'name': 'Adventure'}, {'id': 14, '...</td>\n      <td>NaN</td>\n      <td>8844</td>\n      <td>tt0113497</td>\n      <td>en</td>\n      <td>Jumanji</td>\n      <td>When siblings Judy and Peter discover an encha...</td>\n      <td>...</td>\n      <td>1995-12-15</td>\n      <td>262797249.0</td>\n      <td>104.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n      <td>Released</td>\n      <td>Roll the dice and unleash the excitement!</td>\n      <td>Jumanji</td>\n      <td>False</td>\n      <td>6.9</td>\n      <td>2413.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>False</td>\n      <td>{'id': 119050, 'name': 'Grumpy Old Men Collect...</td>\n      <td>0</td>\n      <td>[{'id': 10749, 'name': 'Romance'}, {'id': 35, ...</td>\n      <td>NaN</td>\n      <td>15602</td>\n      <td>tt0113228</td>\n      <td>en</td>\n      <td>Grumpier Old Men</td>\n      <td>A family wedding reignites the ancient feud be...</td>\n      <td>...</td>\n      <td>1995-12-22</td>\n      <td>0.0</td>\n      <td>101.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>Still Yelling. Still Fighting. Still Ready for...</td>\n      <td>Grumpier Old Men</td>\n      <td>False</td>\n      <td>6.5</td>\n      <td>92.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>False</td>\n      <td>NaN</td>\n      <td>16000000</td>\n      <td>[{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...</td>\n      <td>NaN</td>\n      <td>31357</td>\n      <td>tt0114885</td>\n      <td>en</td>\n      <td>Waiting to Exhale</td>\n      <td>Cheated on, mistreated and stepped on, the wom...</td>\n      <td>...</td>\n      <td>1995-12-22</td>\n      <td>81452156.0</td>\n      <td>127.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>Friends are the people who let you be yourself...</td>\n      <td>Waiting to Exhale</td>\n      <td>False</td>\n      <td>6.1</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>False</td>\n      <td>{'id': 96871, 'name': 'Father of the Bride Col...</td>\n      <td>0</td>\n      <td>[{'id': 35, 'name': 'Comedy'}]</td>\n      <td>NaN</td>\n      <td>11862</td>\n      <td>tt0113041</td>\n      <td>en</td>\n      <td>Father of the Bride Part II</td>\n      <td>Just when George Banks has recovered from his ...</td>\n      <td>...</td>\n      <td>1995-02-10</td>\n      <td>76578911.0</td>\n      <td>106.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>Just When His World Is Back To Normal... He's ...</td>\n      <td>Father of the Bride Part II</td>\n      <td>False</td>\n      <td>5.7</td>\n      <td>173.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 24 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"sr['genres']= sr['genres'].fillna('[]').apply(literal_eval).apply(lambda x: [i['name'] for i in x] if isinstance(x,list) else [])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:08.740032Z","iopub.execute_input":"2024-09-07T14:24:08.740529Z","iopub.status.idle":"2024-09-07T14:24:10.667467Z","shell.execute_reply.started":"2024-09-07T14:24:08.740481Z","shell.execute_reply":"2024-09-07T14:24:10.666344Z"},"trusted":true},"execution_count":3,"outputs":[]},{"cell_type":"markdown","source":"I use the TMDB Ratings to come up with our Top Movies Chart. I will use IMDB's weighted rating formula to construct my chart. Mathematically, it is represented as follows:\n\nWeighted Rating (WR) =  (vv+m.R)+(mv+m.C) \n\nwhere,\n\nv is the number of votes for the movie\nm is the minimum votes required to be listed in the chart\nR is the average rating of the movie\nC is the mean vote across the whole report\nThe next step is to determine an appropriate value for m, the minimum votes required to be listed in the chart. We will use 95th percentile as our cutoff. In other words, for a movie to feature in the charts, it must have more votes than at least 95% of the movies in the list.\n\nI will build our overall Top 250 Chart and will define a function to build charts for a particular genre. Let's begin!","metadata":{}},{"cell_type":"code","source":"vote_counts= sr[sr['vote_count'].notnull()]['vote_count'].astype('int')\nvote_averages= sr[sr['vote_average'].notnull()]['vote_average'].astype('int')\nC = vote_averages.mean()\nC","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:10.670321Z","iopub.execute_input":"2024-09-07T14:24:10.670747Z","iopub.status.idle":"2024-09-07T14:24:10.723497Z","shell.execute_reply.started":"2024-09-07T14:24:10.670704Z","shell.execute_reply":"2024-09-07T14:24:10.722287Z"},"trusted":true},"execution_count":4,"outputs":[{"execution_count":4,"output_type":"execute_result","data":{"text/plain":"5.244896612406511"},"metadata":{}}]},{"cell_type":"code","source":"m= vote_counts.quantile(0.95)\nm","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:10.724823Z","iopub.execute_input":"2024-09-07T14:24:10.725198Z","iopub.status.idle":"2024-09-07T14:24:10.736172Z","shell.execute_reply.started":"2024-09-07T14:24:10.725159Z","shell.execute_reply":"2024-09-07T14:24:10.734899Z"},"trusted":true},"execution_count":5,"outputs":[{"execution_count":5,"output_type":"execute_result","data":{"text/plain":"434.0"},"metadata":{}}]},{"cell_type":"code","source":"sr['year']= pd.to_datetime(sr['release_date'], errors='coerce').apply(lambda x: str(x).split('-')[0] if x!= np.nan else np.nan)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:10.737607Z","iopub.execute_input":"2024-09-07T14:24:10.738044Z","iopub.status.idle":"2024-09-07T14:24:11.087668Z","shell.execute_reply.started":"2024-09-07T14:24:10.737969Z","shell.execute_reply":"2024-09-07T14:24:11.086262Z"},"trusted":true},"execution_count":6,"outputs":[]},{"cell_type":"code","source":"qualified= sr[(sr['vote_count'] >= m) & (sr['vote_count'].notnull()) & (sr['vote_average'].notnull())][['title', 'year','vote_count','vote_average','popularity','genres']]\nqualified['vote_count'] = qualified['vote_count'].astype('int')\nqualified['vote_average']= qualified['vote_average'].astype('int')\nqualified.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:11.089637Z","iopub.execute_input":"2024-09-07T14:24:11.090067Z","iopub.status.idle":"2024-09-07T14:24:11.108324Z","shell.execute_reply.started":"2024-09-07T14:24:11.090023Z","shell.execute_reply":"2024-09-07T14:24:11.107102Z"},"trusted":true},"execution_count":7,"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"(2274, 6)"},"metadata":{}}]},{"cell_type":"code","source":"def weighted_rating(x):\n    v= x['vote_count']\n    R= x['vote_average']\n    return (v/(v+m)*R) + (m/(m+v) *C)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:11.110292Z","iopub.execute_input":"2024-09-07T14:24:11.110785Z","iopub.status.idle":"2024-09-07T14:24:11.118353Z","shell.execute_reply.started":"2024-09-07T14:24:11.110727Z","shell.execute_reply":"2024-09-07T14:24:11.116966Z"},"trusted":true},"execution_count":8,"outputs":[]},{"cell_type":"code","source":"qualified['wr']= qualified.apply(weighted_rating, axis=1)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:11.119764Z","iopub.execute_input":"2024-09-07T14:24:11.120191Z","iopub.status.idle":"2024-09-07T14:24:11.177013Z","shell.execute_reply.started":"2024-09-07T14:24:11.120151Z","shell.execute_reply":"2024-09-07T14:24:11.175764Z"},"trusted":true},"execution_count":9,"outputs":[]},{"cell_type":"code","source":"qualified= qualified.sort_values('wr', ascending=False).head(250)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:11.182230Z","iopub.execute_input":"2024-09-07T14:24:11.182640Z","iopub.status.idle":"2024-09-07T14:24:11.192046Z","shell.execute_reply.started":"2024-09-07T14:24:11.182590Z","shell.execute_reply":"2024-09-07T14:24:11.190644Z"},"trusted":true},"execution_count":10,"outputs":[]},{"cell_type":"code","source":"qualified.head(15)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:11.193773Z","iopub.execute_input":"2024-09-07T14:24:11.194328Z","iopub.status.idle":"2024-09-07T14:24:11.220310Z","shell.execute_reply.started":"2024-09-07T14:24:11.194263Z","shell.execute_reply":"2024-09-07T14:24:11.218671Z"},"trusted":true},"execution_count":11,"outputs":[{"execution_count":11,"output_type":"execute_result","data":{"text/plain":"                                                   title  year  vote_count  \\\n15480                                          Inception  2010       14075   \n12481                                    The Dark Knight  2008       12269   \n22879                                       Interstellar  2014       11187   \n2843                                          Fight Club  1999        9678   \n4863   The Lord of the Rings: The Fellowship of the Ring  2001        8892   \n292                                         Pulp Fiction  1994        8670   \n314                             The Shawshank Redemption  1994        8358   \n7000       The Lord of the Rings: The Return of the King  2003        8226   \n351                                         Forrest Gump  1994        8147   \n5814               The Lord of the Rings: The Two Towers  2002        7641   \n256                                            Star Wars  1977        6778   \n1225                                  Back to the Future  1985        6239   \n834                                        The Godfather  1972        6024   \n1154                             The Empire Strikes Back  1980        5998   \n46                                                 Se7en  1995        5915   \n\n       vote_average  popularity  \\\n15480             8   29.108149   \n12481             8  123.167259   \n22879             8   32.213481   \n2843              8   63.869599   \n4863              8   32.070725   \n292               8  140.950236   \n314               8   51.645403   \n7000              8   29.324358   \n351               8   48.307194   \n5814              8   29.423537   \n256               8   42.149697   \n1225              8   25.778509   \n834               8   41.109264   \n1154              8   19.470959   \n46                8    18.45743   \n\n                                                  genres        wr  \n15480  [Action, Thriller, Science Fiction, Mystery, A...  7.917588  \n12481                   [Drama, Action, Crime, Thriller]  7.905871  \n22879                [Adventure, Drama, Science Fiction]  7.897107  \n2843                                             [Drama]  7.881753  \n4863                        [Adventure, Fantasy, Action]  7.871787  \n292                                    [Thriller, Crime]  7.868660  \n314                                       [Drama, Crime]  7.864000  \n7000                        [Adventure, Fantasy, Action]  7.861927  \n351                             [Comedy, Drama, Romance]  7.860656  \n5814                        [Adventure, Fantasy, Action]  7.851924  \n256                 [Adventure, Action, Science Fiction]  7.834205  \n1225        [Adventure, Comedy, Science Fiction, Family]  7.820813  \n834                                       [Drama, Crime]  7.814847  \n1154                [Adventure, Action, Science Fiction]  7.814099  \n46                            [Crime, Mystery, Thriller]  7.811669  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>year</th>\n      <th>vote_count</th>\n      <th>vote_average</th>\n      <th>popularity</th>\n      <th>genres</th>\n      <th>wr</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>15480</th>\n      <td>Inception</td>\n      <td>2010</td>\n      <td>14075</td>\n      <td>8</td>\n      <td>29.108149</td>\n      <td>[Action, Thriller, Science Fiction, Mystery, A...</td>\n      <td>7.917588</td>\n    </tr>\n    <tr>\n      <th>12481</th>\n      <td>The Dark Knight</td>\n      <td>2008</td>\n      <td>12269</td>\n      <td>8</td>\n      <td>123.167259</td>\n      <td>[Drama, Action, Crime, Thriller]</td>\n      <td>7.905871</td>\n    </tr>\n    <tr>\n      <th>22879</th>\n      <td>Interstellar</td>\n      <td>2014</td>\n      <td>11187</td>\n      <td>8</td>\n      <td>32.213481</td>\n      <td>[Adventure, Drama, Science Fiction]</td>\n      <td>7.897107</td>\n    </tr>\n    <tr>\n      <th>2843</th>\n      <td>Fight Club</td>\n      <td>1999</td>\n      <td>9678</td>\n      <td>8</td>\n      <td>63.869599</td>\n      <td>[Drama]</td>\n      <td>7.881753</td>\n    </tr>\n    <tr>\n      <th>4863</th>\n      <td>The Lord of the Rings: The Fellowship of the Ring</td>\n      <td>2001</td>\n      <td>8892</td>\n      <td>8</td>\n      <td>32.070725</td>\n      <td>[Adventure, Fantasy, Action]</td>\n      <td>7.871787</td>\n    </tr>\n    <tr>\n      <th>292</th>\n      <td>Pulp Fiction</td>\n      <td>1994</td>\n      <td>8670</td>\n      <td>8</td>\n      <td>140.950236</td>\n      <td>[Thriller, Crime]</td>\n      <td>7.868660</td>\n    </tr>\n    <tr>\n      <th>314</th>\n      <td>The Shawshank Redemption</td>\n      <td>1994</td>\n      <td>8358</td>\n      <td>8</td>\n      <td>51.645403</td>\n      <td>[Drama, Crime]</td>\n      <td>7.864000</td>\n    </tr>\n    <tr>\n      <th>7000</th>\n      <td>The Lord of the Rings: The Return of the King</td>\n      <td>2003</td>\n      <td>8226</td>\n      <td>8</td>\n      <td>29.324358</td>\n      <td>[Adventure, Fantasy, Action]</td>\n      <td>7.861927</td>\n    </tr>\n    <tr>\n      <th>351</th>\n      <td>Forrest Gump</td>\n      <td>1994</td>\n      <td>8147</td>\n      <td>8</td>\n      <td>48.307194</td>\n      <td>[Comedy, Drama, Romance]</td>\n      <td>7.860656</td>\n    </tr>\n    <tr>\n      <th>5814</th>\n      <td>The Lord of the Rings: The Two Towers</td>\n      <td>2002</td>\n      <td>7641</td>\n      <td>8</td>\n      <td>29.423537</td>\n      <td>[Adventure, Fantasy, Action]</td>\n      <td>7.851924</td>\n    </tr>\n    <tr>\n      <th>256</th>\n      <td>Star Wars</td>\n      <td>1977</td>\n      <td>6778</td>\n      <td>8</td>\n      <td>42.149697</td>\n      <td>[Adventure, Action, Science Fiction]</td>\n      <td>7.834205</td>\n    </tr>\n    <tr>\n      <th>1225</th>\n      <td>Back to the Future</td>\n      <td>1985</td>\n      <td>6239</td>\n      <td>8</td>\n      <td>25.778509</td>\n      <td>[Adventure, Comedy, Science Fiction, Family]</td>\n      <td>7.820813</td>\n    </tr>\n    <tr>\n      <th>834</th>\n      <td>The Godfather</td>\n      <td>1972</td>\n      <td>6024</td>\n      <td>8</td>\n      <td>41.109264</td>\n      <td>[Drama, Crime]</td>\n      <td>7.814847</td>\n    </tr>\n    <tr>\n      <th>1154</th>\n      <td>The Empire Strikes Back</td>\n      <td>1980</td>\n      <td>5998</td>\n      <td>8</td>\n      <td>19.470959</td>\n      <td>[Adventure, Action, Science Fiction]</td>\n      <td>7.814099</td>\n    </tr>\n    <tr>\n      <th>46</th>\n      <td>Se7en</td>\n      <td>1995</td>\n      <td>5915</td>\n      <td>8</td>\n      <td>18.45743</td>\n      <td>[Crime, Mystery, Thriller]</td>\n      <td>7.811669</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"s= sr.apply(lambda x: pd.Series(x['genres']), axis=1).stack().reset_index(level=1, drop=True)\ns.name= 'genre'\ngen_md= sr.drop('genres', axis=1).join(s)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:11.221948Z","iopub.execute_input":"2024-09-07T14:24:11.222497Z","iopub.status.idle":"2024-09-07T14:24:26.050655Z","shell.execute_reply.started":"2024-09-07T14:24:11.222451Z","shell.execute_reply":"2024-09-07T14:24:26.049362Z"},"trusted":true},"execution_count":12,"outputs":[]},{"cell_type":"code","source":"def build_chart(genre, percentile=0.85):\n    df= gen_md[gen_md['genre'] == genre]\n    vote_counts= df[df['vote_count'].notnull()]['vote_count'].astype('int')\n    vote_averages= df[df['vote_average'].notnull()]['vote_average'].astype('int')\n    C= vote_averages.mean()\n    m= vote_counts.quantile(percentile)\n    \n    qualified= df[(df['vote_count'] >=m) & (df['vote_count'].notnull()) & (df['vote_average'].notnull())][['title', 'year','vote_count','vote_average','popularity']]\n    qualified['vote_count'] = qualified['vote_count'].astype('int')\n    qualified['vote_average']= qualified['vote_average'].astype('int')\n    qualified['wr'] = qualified.apply(lambda x: (x['vote_count']/(x['vote_count'] +m) * x['vote_average']) + (m/(m+x['vote_count']) * C), axis=1)\n    qualified = qualified.sort_values('wr', ascending=False).head(250)\n    \n    return qualified","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:26.052346Z","iopub.execute_input":"2024-09-07T14:24:26.052768Z","iopub.status.idle":"2024-09-07T14:24:26.064185Z","shell.execute_reply.started":"2024-09-07T14:24:26.052726Z","shell.execute_reply":"2024-09-07T14:24:26.062952Z"},"trusted":true},"execution_count":13,"outputs":[]},{"cell_type":"code","source":"build_chart('Romance').head(15)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:26.065867Z","iopub.execute_input":"2024-09-07T14:24:26.066335Z","iopub.status.idle":"2024-09-07T14:24:26.175735Z","shell.execute_reply.started":"2024-09-07T14:24:26.066269Z","shell.execute_reply":"2024-09-07T14:24:26.174473Z"},"trusted":true},"execution_count":14,"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"                             title  year  vote_count  vote_average popularity  \\\n10309  Dilwale Dulhania Le Jayenge  1995         661             9  34.457024   \n351                   Forrest Gump  1994        8147             8  48.307194   \n876                        Vertigo  1958        1162             8   18.20822   \n40251                   Your Name.  2016        1030             8  34.461252   \n883               Some Like It Hot  1959         835             8  11.845107   \n1132               Cinema Paradiso  1988         834             8  14.177005   \n19901                     Paperman  2012         734             8   7.198633   \n37863                  Sing Street  2016         669             8  10.672862   \n882                  The Apartment  1960         498             8  11.994281   \n38718               The Handmaiden  2016         453             8  16.727405   \n3189                   City Lights  1931         444             8  10.891524   \n24886             The Way He Looks  2014         262             8   5.711274   \n45437               In a Heartbeat  2017         146             8   20.82178   \n1639                       Titanic  1997        7770             7   26.88907   \n19731      Silver Linings Playbook  2012        4840             7  14.488111   \n\n             wr  \n10309  8.565285  \n351    7.971357  \n876    7.811667  \n40251  7.789489  \n883    7.745154  \n1132   7.744878  \n19901  7.713951  \n37863  7.689483  \n882    7.599317  \n38718  7.566166  \n3189   7.558867  \n24886  7.331363  \n45437  7.003959  \n1639   6.981546  \n19731  6.970581  ","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>title</th>\n      <th>year</th>\n      <th>vote_count</th>\n      <th>vote_average</th>\n      <th>popularity</th>\n      <th>wr</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>10309</th>\n      <td>Dilwale Dulhania Le Jayenge</td>\n      <td>1995</td>\n      <td>661</td>\n      <td>9</td>\n      <td>34.457024</td>\n      <td>8.565285</td>\n    </tr>\n    <tr>\n      <th>351</th>\n      <td>Forrest Gump</td>\n      <td>1994</td>\n      <td>8147</td>\n      <td>8</td>\n      <td>48.307194</td>\n      <td>7.971357</td>\n    </tr>\n    <tr>\n      <th>876</th>\n      <td>Vertigo</td>\n      <td>1958</td>\n      <td>1162</td>\n      <td>8</td>\n      <td>18.20822</td>\n      <td>7.811667</td>\n    </tr>\n    <tr>\n      <th>40251</th>\n      <td>Your Name.</td>\n      <td>2016</td>\n      <td>1030</td>\n      <td>8</td>\n      <td>34.461252</td>\n      <td>7.789489</td>\n    </tr>\n    <tr>\n      <th>883</th>\n      <td>Some Like It Hot</td>\n      <td>1959</td>\n      <td>835</td>\n      <td>8</td>\n      <td>11.845107</td>\n      <td>7.745154</td>\n    </tr>\n    <tr>\n      <th>1132</th>\n      <td>Cinema Paradiso</td>\n      <td>1988</td>\n      <td>834</td>\n      <td>8</td>\n      <td>14.177005</td>\n      <td>7.744878</td>\n    </tr>\n    <tr>\n      <th>19901</th>\n      <td>Paperman</td>\n      <td>2012</td>\n      <td>734</td>\n      <td>8</td>\n      <td>7.198633</td>\n      <td>7.713951</td>\n    </tr>\n    <tr>\n      <th>37863</th>\n      <td>Sing Street</td>\n      <td>2016</td>\n      <td>669</td>\n      <td>8</td>\n      <td>10.672862</td>\n      <td>7.689483</td>\n    </tr>\n    <tr>\n      <th>882</th>\n      <td>The Apartment</td>\n      <td>1960</td>\n      <td>498</td>\n      <td>8</td>\n      <td>11.994281</td>\n      <td>7.599317</td>\n    </tr>\n    <tr>\n      <th>38718</th>\n      <td>The Handmaiden</td>\n      <td>2016</td>\n      <td>453</td>\n      <td>8</td>\n      <td>16.727405</td>\n      <td>7.566166</td>\n    </tr>\n    <tr>\n      <th>3189</th>\n      <td>City Lights</td>\n      <td>1931</td>\n      <td>444</td>\n      <td>8</td>\n      <td>10.891524</td>\n      <td>7.558867</td>\n    </tr>\n    <tr>\n      <th>24886</th>\n      <td>The Way He Looks</td>\n      <td>2014</td>\n      <td>262</td>\n      <td>8</td>\n      <td>5.711274</td>\n      <td>7.331363</td>\n    </tr>\n    <tr>\n      <th>45437</th>\n      <td>In a Heartbeat</td>\n      <td>2017</td>\n      <td>146</td>\n      <td>8</td>\n      <td>20.82178</td>\n      <td>7.003959</td>\n    </tr>\n    <tr>\n      <th>1639</th>\n      <td>Titanic</td>\n      <td>1997</td>\n      <td>7770</td>\n      <td>7</td>\n      <td>26.88907</td>\n      <td>6.981546</td>\n    </tr>\n    <tr>\n      <th>19731</th>\n      <td>Silver Linings Playbook</td>\n      <td>2012</td>\n      <td>4840</td>\n      <td>7</td>\n      <td>14.488111</td>\n      <td>6.970581</td>\n    </tr>\n  </tbody>\n</table>\n</div>"},"metadata":{}}]},{"cell_type":"markdown","source":"**Content Based Recommender**","metadata":{}},{"cell_type":"code","source":"links_small= pd.read_csv(\"/kaggle/input/the-movies-dataset/links_small.csv\")\nlinks_small= links_small[links_small['tmdbId'].notnull()]['tmdbId'].astype('int')","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:26.177450Z","iopub.execute_input":"2024-09-07T14:24:26.178031Z","iopub.status.idle":"2024-09-07T14:24:26.205892Z","shell.execute_reply.started":"2024-09-07T14:24:26.177895Z","shell.execute_reply":"2024-09-07T14:24:26.204569Z"},"trusted":true},"execution_count":15,"outputs":[]},{"cell_type":"code","source":"links_small.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:26.207223Z","iopub.execute_input":"2024-09-07T14:24:26.207596Z","iopub.status.idle":"2024-09-07T14:24:26.216617Z","shell.execute_reply.started":"2024-09-07T14:24:26.207556Z","shell.execute_reply":"2024-09-07T14:24:26.215223Z"},"trusted":true},"execution_count":16,"outputs":[{"execution_count":16,"output_type":"execute_result","data":{"text/plain":"0      862\n1     8844\n2    15602\n3    31357\n4    11862\nName: tmdbId, dtype: int64"},"metadata":{}}]},{"cell_type":"code","source":"md= pd.read_csv(\"/kaggle/input/the-movies-dataset/movies_metadata.csv\")\nmd.head()","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:26.218276Z","iopub.execute_input":"2024-09-07T14:24:26.218683Z","iopub.status.idle":"2024-09-07T14:24:27.097838Z","shell.execute_reply.started":"2024-09-07T14:24:26.218633Z","shell.execute_reply":"2024-09-07T14:24:27.096598Z"},"trusted":true},"execution_count":17,"outputs":[{"execution_count":17,"output_type":"execute_result","data":{"text/plain":"   adult                              belongs_to_collection    budget  \\\n0  False  {'id': 10194, 'name': 'Toy Story Collection', ...  30000000   \n1  False                                                NaN  65000000   \n2  False  {'id': 119050, 'name': 'Grumpy Old Men Collect...         0   \n3  False                                                NaN  16000000   \n4  False  {'id': 96871, 'name': 'Father of the Bride Col...         0   \n\n                                              genres  \\\n0  [{'id': 16, 'name': 'Animation'}, {'id': 35, '...   \n1  [{'id': 12, 'name': 'Adventure'}, {'id': 14, '...   \n2  [{'id': 10749, 'name': 'Romance'}, {'id': 35, ...   \n3  [{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...   \n4                     [{'id': 35, 'name': 'Comedy'}]   \n\n                               homepage     id    imdb_id original_language  \\\n0  http://toystory.disney.com/toy-story    862  tt0114709                en   \n1                                   NaN   8844  tt0113497                en   \n2                                   NaN  15602  tt0113228                en   \n3                                   NaN  31357  tt0114885                en   \n4                                   NaN  11862  tt0113041                en   \n\n                original_title  \\\n0                    Toy Story   \n1                      Jumanji   \n2             Grumpier Old Men   \n3            Waiting to Exhale   \n4  Father of the Bride Part II   \n\n                                            overview  ... release_date  \\\n0  Led by Woody, Andy's toys live happily in his ...  ...   1995-10-30   \n1  When siblings Judy and Peter discover an encha...  ...   1995-12-15   \n2  A family wedding reignites the ancient feud be...  ...   1995-12-22   \n3  Cheated on, mistreated and stepped on, the wom...  ...   1995-12-22   \n4  Just when George Banks has recovered from his ...  ...   1995-02-10   \n\n       revenue runtime                                   spoken_languages  \\\n0  373554033.0    81.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n1  262797249.0   104.0  [{'iso_639_1': 'en', 'name': 'English'}, {'iso...   \n2          0.0   101.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n3   81452156.0   127.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n4   76578911.0   106.0           [{'iso_639_1': 'en', 'name': 'English'}]   \n\n     status                                            tagline  \\\n0  Released                                                NaN   \n1  Released          Roll the dice and unleash the excitement!   \n2  Released  Still Yelling. Still Fighting. Still Ready for...   \n3  Released  Friends are the people who let you be yourself...   \n4  Released  Just When His World Is Back To Normal... He's ...   \n\n                         title  video vote_average vote_count  \n0                    Toy Story  False          7.7     5415.0  \n1                      Jumanji  False          6.9     2413.0  \n2             Grumpier Old Men  False          6.5       92.0  \n3            Waiting to Exhale  False          6.1       34.0  \n4  Father of the Bride Part II  False          5.7      173.0  \n\n[5 rows x 24 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>adult</th>\n      <th>belongs_to_collection</th>\n      <th>budget</th>\n      <th>genres</th>\n      <th>homepage</th>\n      <th>id</th>\n      <th>imdb_id</th>\n      <th>original_language</th>\n      <th>original_title</th>\n      <th>overview</th>\n      <th>...</th>\n      <th>release_date</th>\n      <th>revenue</th>\n      <th>runtime</th>\n      <th>spoken_languages</th>\n      <th>status</th>\n      <th>tagline</th>\n      <th>title</th>\n      <th>video</th>\n      <th>vote_average</th>\n      <th>vote_count</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>False</td>\n      <td>{'id': 10194, 'name': 'Toy Story Collection', ...</td>\n      <td>30000000</td>\n      <td>[{'id': 16, 'name': 'Animation'}, {'id': 35, '...</td>\n      <td>http://toystory.disney.com/toy-story</td>\n      <td>862</td>\n      <td>tt0114709</td>\n      <td>en</td>\n      <td>Toy Story</td>\n      <td>Led by Woody, Andy's toys live happily in his ...</td>\n      <td>...</td>\n      <td>1995-10-30</td>\n      <td>373554033.0</td>\n      <td>81.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>NaN</td>\n      <td>Toy Story</td>\n      <td>False</td>\n      <td>7.7</td>\n      <td>5415.0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>False</td>\n      <td>NaN</td>\n      <td>65000000</td>\n      <td>[{'id': 12, 'name': 'Adventure'}, {'id': 14, '...</td>\n      <td>NaN</td>\n      <td>8844</td>\n      <td>tt0113497</td>\n      <td>en</td>\n      <td>Jumanji</td>\n      <td>When siblings Judy and Peter discover an encha...</td>\n      <td>...</td>\n      <td>1995-12-15</td>\n      <td>262797249.0</td>\n      <td>104.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}, {'iso...</td>\n      <td>Released</td>\n      <td>Roll the dice and unleash the excitement!</td>\n      <td>Jumanji</td>\n      <td>False</td>\n      <td>6.9</td>\n      <td>2413.0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>False</td>\n      <td>{'id': 119050, 'name': 'Grumpy Old Men Collect...</td>\n      <td>0</td>\n      <td>[{'id': 10749, 'name': 'Romance'}, {'id': 35, ...</td>\n      <td>NaN</td>\n      <td>15602</td>\n      <td>tt0113228</td>\n      <td>en</td>\n      <td>Grumpier Old Men</td>\n      <td>A family wedding reignites the ancient feud be...</td>\n      <td>...</td>\n      <td>1995-12-22</td>\n      <td>0.0</td>\n      <td>101.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>Still Yelling. Still Fighting. Still Ready for...</td>\n      <td>Grumpier Old Men</td>\n      <td>False</td>\n      <td>6.5</td>\n      <td>92.0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>False</td>\n      <td>NaN</td>\n      <td>16000000</td>\n      <td>[{'id': 35, 'name': 'Comedy'}, {'id': 18, 'nam...</td>\n      <td>NaN</td>\n      <td>31357</td>\n      <td>tt0114885</td>\n      <td>en</td>\n      <td>Waiting to Exhale</td>\n      <td>Cheated on, mistreated and stepped on, the wom...</td>\n      <td>...</td>\n      <td>1995-12-22</td>\n      <td>81452156.0</td>\n      <td>127.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>Friends are the people who let you be yourself...</td>\n      <td>Waiting to Exhale</td>\n      <td>False</td>\n      <td>6.1</td>\n      <td>34.0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>False</td>\n      <td>{'id': 96871, 'name': 'Father of the Bride Col...</td>\n      <td>0</td>\n      <td>[{'id': 35, 'name': 'Comedy'}]</td>\n      <td>NaN</td>\n      <td>11862</td>\n      <td>tt0113041</td>\n      <td>en</td>\n      <td>Father of the Bride Part II</td>\n      <td>Just when George Banks has recovered from his ...</td>\n      <td>...</td>\n      <td>1995-02-10</td>\n      <td>76578911.0</td>\n      <td>106.0</td>\n      <td>[{'iso_639_1': 'en', 'name': 'English'}]</td>\n      <td>Released</td>\n      <td>Just When His World Is Back To Normal... He's ...</td>\n      <td>Father of the Bride Part II</td>\n      <td>False</td>\n      <td>5.7</td>\n      <td>173.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows Ã— 24 columns</p>\n</div>"},"metadata":{}}]},{"cell_type":"code","source":"md= md.drop([19730,29503,35587])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:27.099572Z","iopub.execute_input":"2024-09-07T14:24:27.100070Z","iopub.status.idle":"2024-09-07T14:24:27.123444Z","shell.execute_reply.started":"2024-09-07T14:24:27.100026Z","shell.execute_reply":"2024-09-07T14:24:27.122074Z"},"trusted":true},"execution_count":18,"outputs":[]},{"cell_type":"code","source":"md['id']= md['id'].astype('int')","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:27.124844Z","iopub.execute_input":"2024-09-07T14:24:27.125237Z","iopub.status.idle":"2024-09-07T14:24:27.140169Z","shell.execute_reply.started":"2024-09-07T14:24:27.125196Z","shell.execute_reply":"2024-09-07T14:24:27.138858Z"},"trusted":true},"execution_count":19,"outputs":[]},{"cell_type":"code","source":"smd= md[md['id'].isin(links_small)]\nsmd.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:27.141736Z","iopub.execute_input":"2024-09-07T14:24:27.142122Z","iopub.status.idle":"2024-09-07T14:24:27.165831Z","shell.execute_reply.started":"2024-09-07T14:24:27.142082Z","shell.execute_reply":"2024-09-07T14:24:27.164666Z"},"trusted":true},"execution_count":20,"outputs":[{"execution_count":20,"output_type":"execute_result","data":{"text/plain":"(9099, 24)"},"metadata":{}}]},{"cell_type":"code","source":"smd['tagline'] =smd['tagline'].fillna('')\nsmd['description'] = smd['overview'] + smd['tagline']\nsmd['description'] = smd['description'].fillna('')","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:27.167617Z","iopub.execute_input":"2024-09-07T14:24:27.168128Z","iopub.status.idle":"2024-09-07T14:24:27.188764Z","shell.execute_reply.started":"2024-09-07T14:24:27.168074Z","shell.execute_reply":"2024-09-07T14:24:27.187525Z"},"trusted":true},"execution_count":21,"outputs":[]},{"cell_type":"code","source":"tf= TfidfVectorizer(analyzer='word', ngram_range=(1,2), min_df=0, stop_words='english')\ntfidf_matrix= tf.fit_transform(smd['description'])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:27.190082Z","iopub.execute_input":"2024-09-07T14:24:27.190451Z","iopub.status.idle":"2024-09-07T14:24:29.597441Z","shell.execute_reply.started":"2024-09-07T14:24:27.190412Z","shell.execute_reply":"2024-09-07T14:24:29.596314Z"},"trusted":true},"execution_count":22,"outputs":[]},{"cell_type":"code","source":"tfidf_matrix.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:29.599038Z","iopub.execute_input":"2024-09-07T14:24:29.599460Z","iopub.status.idle":"2024-09-07T14:24:29.608815Z","shell.execute_reply.started":"2024-09-07T14:24:29.599402Z","shell.execute_reply":"2024-09-07T14:24:29.606528Z"},"trusted":true},"execution_count":23,"outputs":[{"execution_count":23,"output_type":"execute_result","data":{"text/plain":"(9099, 268124)"},"metadata":{}}]},{"cell_type":"markdown","source":"cosine similarity","metadata":{}},{"cell_type":"code","source":"cosine_sim= linear_kernel(tfidf_matrix, tfidf_matrix)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:29.611436Z","iopub.execute_input":"2024-09-07T14:24:29.611965Z","iopub.status.idle":"2024-09-07T14:24:31.678744Z","shell.execute_reply.started":"2024-09-07T14:24:29.611912Z","shell.execute_reply":"2024-09-07T14:24:31.677798Z"},"trusted":true},"execution_count":24,"outputs":[]},{"cell_type":"code","source":"cosine_sim[0]","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:31.680528Z","iopub.execute_input":"2024-09-07T14:24:31.680923Z","iopub.status.idle":"2024-09-07T14:24:31.689122Z","shell.execute_reply.started":"2024-09-07T14:24:31.680882Z","shell.execute_reply":"2024-09-07T14:24:31.687935Z"},"trusted":true},"execution_count":25,"outputs":[{"execution_count":25,"output_type":"execute_result","data":{"text/plain":"array([1.        , 0.00680476, 0.        , ..., 0.        , 0.00344913,\n       0.        ])"},"metadata":{}}]},{"cell_type":"code","source":"smd = smd.reset_index()\ntitles = smd['title']\nindices = pd.Series(smd.index, index=smd['title'])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:31.690632Z","iopub.execute_input":"2024-09-07T14:24:31.691154Z","iopub.status.idle":"2024-09-07T14:24:31.712552Z","shell.execute_reply.started":"2024-09-07T14:24:31.691098Z","shell.execute_reply":"2024-09-07T14:24:31.711301Z"},"trusted":true},"execution_count":26,"outputs":[]},{"cell_type":"code","source":"def get_recommendations(title):\n    idx = indices[title]\n    sim_scores = list(enumerate(cosine_sim[idx]))\n    sim_scores = sorted(sim_scores, key=lambda x: x[1], reverse=True)\n    sim_scores = sim_scores[1:31]\n    movie_indices = [i[0] for i in sim_scores]\n    return titles.iloc[movie_indices]","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:24:31.714161Z","iopub.execute_input":"2024-09-07T14:24:31.714543Z","iopub.status.idle":"2024-09-07T14:24:31.721662Z","shell.execute_reply.started":"2024-09-07T14:24:31.714503Z","shell.execute_reply":"2024-09-07T14:24:31.720307Z"},"trusted":true},"execution_count":27,"outputs":[]},{"cell_type":"code","source":"get_recommendations(\"The Godfather\").head(10)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:14.425910Z","iopub.execute_input":"2024-09-07T14:45:14.427278Z","iopub.status.idle":"2024-09-07T14:45:14.450055Z","shell.execute_reply.started":"2024-09-07T14:45:14.427222Z","shell.execute_reply":"2024-09-07T14:45:14.448554Z"},"trusted":true},"execution_count":29,"outputs":[{"execution_count":29,"output_type":"execute_result","data":{"text/plain":"973      The Godfather: Part II\n8387                 The Family\n3509                       Made\n4196         Johnny Dangerously\n29               Shanghai Triad\n5667                       Fury\n2412             American Movie\n1582    The Godfather: Part III\n4221                    8 Women\n2159              Summer of Sam\nName: title, dtype: object"},"metadata":{}}]},{"cell_type":"markdown","source":"metadata based recommendation","metadata":{}},{"cell_type":"code","source":"credits= pd.read_csv(\"/kaggle/input/the-movies-dataset/credits.csv\")\nkeywords= pd.read_csv(\"/kaggle/input/the-movies-dataset/keywords.csv\")","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:22.713580Z","iopub.execute_input":"2024-09-07T14:45:22.714071Z","iopub.status.idle":"2024-09-07T14:45:27.445923Z","shell.execute_reply.started":"2024-09-07T14:45:22.714025Z","shell.execute_reply":"2024-09-07T14:45:27.444478Z"},"trusted":true},"execution_count":30,"outputs":[]},{"cell_type":"code","source":"keywords['id']= keywords['id'].astype('int')\ncredits['id'] = credits['id'].astype('int')\nmd['id'] = md['id'].astype('int')","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:31.676041Z","iopub.execute_input":"2024-09-07T14:45:31.676488Z","iopub.status.idle":"2024-09-07T14:45:31.685318Z","shell.execute_reply.started":"2024-09-07T14:45:31.676444Z","shell.execute_reply":"2024-09-07T14:45:31.684201Z"},"trusted":true},"execution_count":31,"outputs":[]},{"cell_type":"code","source":"md.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:33.096237Z","iopub.execute_input":"2024-09-07T14:45:33.096803Z","iopub.status.idle":"2024-09-07T14:45:33.105216Z","shell.execute_reply.started":"2024-09-07T14:45:33.096756Z","shell.execute_reply":"2024-09-07T14:45:33.103955Z"},"trusted":true},"execution_count":32,"outputs":[{"execution_count":32,"output_type":"execute_result","data":{"text/plain":"(45463, 24)"},"metadata":{}}]},{"cell_type":"code","source":"md= md.merge(credits, on='id')\nmd=md.merge(keywords, on='id')","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:34.165058Z","iopub.execute_input":"2024-09-07T14:45:34.165516Z","iopub.status.idle":"2024-09-07T14:45:34.365107Z","shell.execute_reply.started":"2024-09-07T14:45:34.165471Z","shell.execute_reply":"2024-09-07T14:45:34.363812Z"},"trusted":true},"execution_count":33,"outputs":[]},{"cell_type":"code","source":"smd=md[md['id'].isin(links_small)]\nsmd.shape","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:36.012523Z","iopub.execute_input":"2024-09-07T14:45:36.013048Z","iopub.status.idle":"2024-09-07T14:45:36.028573Z","shell.execute_reply.started":"2024-09-07T14:45:36.012998Z","shell.execute_reply":"2024-09-07T14:45:36.027439Z"},"trusted":true},"execution_count":34,"outputs":[{"execution_count":34,"output_type":"execute_result","data":{"text/plain":"(9219, 27)"},"metadata":{}}]},{"cell_type":"code","source":"smd['cast']= smd['cast'].apply(literal_eval)\nsmd['crew']= smd['crew'].apply(literal_eval)\nsmd['keywords']= smd['keywords'].apply(literal_eval)\nsmd['cast_size'] = smd['cast'].apply(lambda x: len(x))\nsmd['crew_size'] =smd['crew'].apply(lambda x: len(x))","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:37.066246Z","iopub.execute_input":"2024-09-07T14:45:37.066707Z","iopub.status.idle":"2024-09-07T14:45:55.016149Z","shell.execute_reply.started":"2024-09-07T14:45:37.066663Z","shell.execute_reply":"2024-09-07T14:45:55.015049Z"},"trusted":true},"execution_count":35,"outputs":[]},{"cell_type":"code","source":"def get_director(x):\n    for i in x:\n        if i['job'] == 'Director':\n            return i['name']\n    return np.nan","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:57.264458Z","iopub.execute_input":"2024-09-07T14:45:57.268507Z","iopub.status.idle":"2024-09-07T14:45:57.274802Z","shell.execute_reply.started":"2024-09-07T14:45:57.268435Z","shell.execute_reply":"2024-09-07T14:45:57.273434Z"},"trusted":true},"execution_count":36,"outputs":[]},{"cell_type":"code","source":"smd['director']= smd['crew'].apply(get_director)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:58.825388Z","iopub.execute_input":"2024-09-07T14:45:58.826322Z","iopub.status.idle":"2024-09-07T14:45:58.856898Z","shell.execute_reply.started":"2024-09-07T14:45:58.826275Z","shell.execute_reply":"2024-09-07T14:45:58.855604Z"},"trusted":true},"execution_count":37,"outputs":[]},{"cell_type":"code","source":"smd['cast'] =smd['cast'].apply(lambda x: [i['name'] for i in x] if isinstance(x, list) else[])\nsmd['cast'] = smd['cast'].apply(lambda x: x[:3] if len(x)>=3 else x)","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:45:59.627623Z","iopub.execute_input":"2024-09-07T14:45:59.628111Z","iopub.status.idle":"2024-09-07T14:45:59.808220Z","shell.execute_reply.started":"2024-09-07T14:45:59.628067Z","shell.execute_reply":"2024-09-07T14:45:59.806771Z"},"trusted":true},"execution_count":38,"outputs":[]},{"cell_type":"code","source":"smd['keywords'] = smd['keywords'].apply(lambda x: [i['name'] for i in x] if isinstance(x,list) else [])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:46:00.816668Z","iopub.execute_input":"2024-09-07T14:46:00.817196Z","iopub.status.idle":"2024-09-07T14:46:00.856882Z","shell.execute_reply.started":"2024-09-07T14:46:00.817150Z","shell.execute_reply":"2024-09-07T14:46:00.855673Z"},"trusted":true},"execution_count":39,"outputs":[]},{"cell_type":"code","source":"smd['cast']= smd['cast'].apply(lambda x: [str.lower(i.replace(\" \",\"\")) for i in x])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:47:33.765203Z","iopub.execute_input":"2024-09-07T14:47:33.765668Z","iopub.status.idle":"2024-09-07T14:47:33.804331Z","shell.execute_reply.started":"2024-09-07T14:47:33.765624Z","shell.execute_reply":"2024-09-07T14:47:33.803092Z"},"trusted":true},"execution_count":41,"outputs":[]},{"cell_type":"code","source":"smd['director'] = smd['director'].astype('str').apply(lambda x: str.lower(x.replace(\" \",\"\")))\nsmd['director'] = smd['director'].apply(lambda x: [x,x, x])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:50:54.877515Z","iopub.execute_input":"2024-09-07T14:50:54.878005Z","iopub.status.idle":"2024-09-07T14:50:54.902636Z","shell.execute_reply.started":"2024-09-07T14:50:54.877939Z","shell.execute_reply":"2024-09-07T14:50:54.901237Z"},"trusted":true},"execution_count":43,"outputs":[]},{"cell_type":"markdown","source":"keywords\ncal the freq count","metadata":{}},{"cell_type":"code","source":"s= smd.apply(lambda x: pd.Series(x['keywords']), axis=1).stack().reset_index(level=1, drop=True)\ns.name = 'keywords'","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:53:18.591413Z","iopub.execute_input":"2024-09-07T14:53:18.591974Z","iopub.status.idle":"2024-09-07T14:53:21.992534Z","shell.execute_reply.started":"2024-09-07T14:53:18.591927Z","shell.execute_reply":"2024-09-07T14:53:21.991115Z"},"trusted":true},"execution_count":44,"outputs":[]},{"cell_type":"code","source":"s= s.value_counts()\ns[:5]","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:54:10.790176Z","iopub.execute_input":"2024-09-07T14:54:10.790808Z","iopub.status.idle":"2024-09-07T14:54:10.829452Z","shell.execute_reply.started":"2024-09-07T14:54:10.790753Z","shell.execute_reply":"2024-09-07T14:54:10.828091Z"},"trusted":true},"execution_count":45,"outputs":[{"execution_count":45,"output_type":"execute_result","data":{"text/plain":"keywords\nindependent film        610\nwoman director          550\nmurder                  399\nduringcreditsstinger    327\nbased on novel          318\nName: count, dtype: int64"},"metadata":{}}]},{"cell_type":"markdown","source":"removing words occured only once, convert every words to its stem so that words such as dogs and dog are considered as the same","metadata":{}},{"cell_type":"code","source":"s= [s>1]","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:56:09.317246Z","iopub.execute_input":"2024-09-07T14:56:09.318616Z","iopub.status.idle":"2024-09-07T14:56:09.325053Z","shell.execute_reply.started":"2024-09-07T14:56:09.318543Z","shell.execute_reply":"2024-09-07T14:56:09.323685Z"},"trusted":true},"execution_count":46,"outputs":[]},{"cell_type":"code","source":"stemmer= SnowballStemmer('english')\nstemmer.stem('dogs')","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:56:55.452067Z","iopub.execute_input":"2024-09-07T14:56:55.452527Z","iopub.status.idle":"2024-09-07T14:56:55.460180Z","shell.execute_reply.started":"2024-09-07T14:56:55.452481Z","shell.execute_reply":"2024-09-07T14:56:55.459201Z"},"trusted":true},"execution_count":47,"outputs":[{"execution_count":47,"output_type":"execute_result","data":{"text/plain":"'dog'"},"metadata":{}}]},{"cell_type":"code","source":"def filter_keyword(x):\n    word= []\n    for i in x:\n        if i in s:\n            word.append(i)\n    return word","metadata":{"execution":{"iopub.status.busy":"2024-09-07T14:59:38.316901Z","iopub.execute_input":"2024-09-07T14:59:38.317366Z","iopub.status.idle":"2024-09-07T14:59:38.323737Z","shell.execute_reply.started":"2024-09-07T14:59:38.317324Z","shell.execute_reply":"2024-09-07T14:59:38.322508Z"},"trusted":true},"execution_count":48,"outputs":[]},{"cell_type":"code","source":"smd['keywords'] = smd['keywords'].apply(filter_keyword)\nsmd['keywords'] = smd['keywords'].apply(lambda x: [stemmer.stem(i) for i in x])\nsmd['keywords'] = smd['keywords'].apply(lambda x: [str.lower(i.replace(\" \",\"\")) for i in x])","metadata":{"execution":{"iopub.status.busy":"2024-09-07T15:02:39.738908Z","iopub.execute_input":"2024-09-07T15:02:39.739400Z","iopub.status.idle":"2024-09-07T15:02:39.809414Z","shell.execute_reply.started":"2024-09-07T15:02:39.739355Z","shell.execute_reply":"2024-09-07T15:02:39.807761Z"},"trusted":true},"execution_count":50,"outputs":[{"name":"stdout","text":"Unexpected exception formatting exception. Falling back to standard exception\n","output_type":"stream"},{"name":"stderr","text":"Traceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3553, in run_code\n    exec(code_obj, self.user_global_ns, self.user_ns)\n  File \"/tmp/ipykernel_36/13722252.py\", line 1, in <module>\n    smd['keywords'] = smd['keywords'].apply(filter_keyword)\n  File \"/opt/conda/lib/python3.10/site-packages/pandas/core/series.py\", line 4924, in apply\n    ).apply()\n  File \"/opt/conda/lib/python3.10/site-packages/pandas/core/apply.py\", line 1427, in apply\n    return self.apply_standard()\n  File \"/opt/conda/lib/python3.10/site-packages/pandas/core/apply.py\", line 1507, in apply_standard\n    mapped = obj._map_values(\n  File \"/opt/conda/lib/python3.10/site-packages/pandas/core/base.py\", line 921, in _map_values\n    return algorithms.map_array(arr, mapper, na_action=na_action, convert=convert)\n  File \"/opt/conda/lib/python3.10/site-packages/pandas/core/algorithms.py\", line 1743, in map_array\n    return lib.map_infer(values, mapper, convert=convert)\n  File \"lib.pyx\", line 2972, in pandas._libs.lib.map_infer\n  File \"/tmp/ipykernel_36/1000510308.py\", line 4, in filter_keyword\n    if i in s:\n  File \"/opt/conda/lib/python3.10/site-packages/pandas/core/generic.py\", line 1577, in __nonzero__\n    raise ValueError(\nValueError: The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 2144, in showtraceback\n    stb = self.InteractiveTB.structured_traceback(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1448, in structured_traceback\n    return FormattedTB.structured_traceback(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1339, in structured_traceback\n    return VerboseTB.structured_traceback(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1186, in structured_traceback\n    formatted_exception = self.format_exception_as_a_whole(etype, evalue, etb, number_of_lines_of_context,\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1076, in format_exception_as_a_whole\n    self.get_records(etb, number_of_lines_of_context, tb_offset) if etb else []\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 1168, in get_records\n    FrameInfo(\n  File \"/opt/conda/lib/python3.10/site-packages/IPython/core/ultratb.py\", line 780, in __init__\n    ix = inspect.getsourcelines(frame)\n  File \"/opt/conda/lib/python3.10/inspect.py\", line 1121, in getsourcelines\n    lines, lnum = findsource(object)\n  File \"/opt/conda/lib/python3.10/inspect.py\", line 958, in findsource\n    raise OSError('could not get source code')\nOSError: could not get source code\n","output_type":"stream"}]},{"cell_type":"code","source":"smd['soup']= smd['keywords'] + smd['cast'] + smd['director'] + smd['genres']\nsmd['soup']= smd['soup'].apply(lambda x: ' '.join(x))","metadata":{"execution":{"iopub.status.busy":"2024-09-07T15:06:24.443955Z","iopub.execute_input":"2024-09-07T15:06:24.444431Z","iopub.status.idle":"2024-09-07T15:06:24.867157Z","shell.execute_reply.started":"2024-09-07T15:06:24.444386Z","shell.execute_reply":"2024-09-07T15:06:24.865333Z"},"trusted":true},"execution_count":51,"outputs":[{"traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/ops/array_ops.py:218\u001b[0m, in \u001b[0;36m_na_arithmetic_op\u001b[0;34m(left, right, op, is_cmp)\u001b[0m\n\u001b[1;32m    217\u001b[0m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[0;32m--> 218\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mfunc\u001b[49m\u001b[43m(\u001b[49m\u001b[43mleft\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mright\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    219\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/computation/expressions.py:242\u001b[0m, in \u001b[0;36mevaluate\u001b[0;34m(op, a, b, use_numexpr)\u001b[0m\n\u001b[1;32m    240\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m use_numexpr:\n\u001b[1;32m    241\u001b[0m         \u001b[38;5;66;03m# error: \"None\" not callable\u001b[39;00m\n\u001b[0;32m--> 242\u001b[0m         \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43m_evaluate\u001b[49m\u001b[43m(\u001b[49m\u001b[43mop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop_str\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43ma\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mb\u001b[49m\u001b[43m)\u001b[49m  \u001b[38;5;66;03m# type: ignore[misc]\u001b[39;00m\n\u001b[1;32m    243\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m _evaluate_standard(op, op_str, a, b)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/computation/expressions.py:131\u001b[0m, in \u001b[0;36m_evaluate_numexpr\u001b[0;34m(op, op_str, a, b)\u001b[0m\n\u001b[1;32m    130\u001b[0m \u001b[38;5;28;01mif\u001b[39;00m result \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[0;32m--> 131\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43m_evaluate_standard\u001b[49m\u001b[43m(\u001b[49m\u001b[43mop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop_str\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43ma\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mb\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    133\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m result\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/computation/expressions.py:73\u001b[0m, in \u001b[0;36m_evaluate_standard\u001b[0;34m(op, op_str, a, b)\u001b[0m\n\u001b[1;32m     72\u001b[0m     _store_test_result(\u001b[38;5;28;01mFalse\u001b[39;00m)\n\u001b[0;32m---> 73\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mop\u001b[49m\u001b[43m(\u001b[49m\u001b[43ma\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mb\u001b[49m\u001b[43m)\u001b[49m\n","\u001b[0;31mTypeError\u001b[0m: can only concatenate list (not \"str\") to list","\nDuring handling of the above exception, another exception occurred:\n","\u001b[0;31mTypeError\u001b[0m                                 Traceback (most recent call last)","Cell \u001b[0;32mIn[51], line 1\u001b[0m\n\u001b[0;32m----> 1\u001b[0m smd[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124msoup\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m=\u001b[39m \u001b[43msmd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mkeywords\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[43msmd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mcast\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[43msmd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mdirector\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[38;5;241;43m+\u001b[39;49m\u001b[43m \u001b[49m\u001b[43msmd\u001b[49m\u001b[43m[\u001b[49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[38;5;124;43mgenres\u001b[39;49m\u001b[38;5;124;43m'\u001b[39;49m\u001b[43m]\u001b[49m\n\u001b[1;32m      2\u001b[0m smd[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124msoup\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m=\u001b[39m smd[\u001b[38;5;124m'\u001b[39m\u001b[38;5;124msoup\u001b[39m\u001b[38;5;124m'\u001b[39m]\u001b[38;5;241m.\u001b[39mapply(\u001b[38;5;28;01mlambda\u001b[39;00m x: \u001b[38;5;124m'\u001b[39m\u001b[38;5;124m \u001b[39m\u001b[38;5;124m'\u001b[39m\u001b[38;5;241m.\u001b[39mjoin(x))\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/ops/common.py:76\u001b[0m, in \u001b[0;36m_unpack_zerodim_and_defer.<locals>.new_method\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m     72\u001b[0m             \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mNotImplemented\u001b[39m\n\u001b[1;32m     74\u001b[0m other \u001b[38;5;241m=\u001b[39m item_from_zerodim(other)\n\u001b[0;32m---> 76\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mmethod\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mother\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/arraylike.py:186\u001b[0m, in \u001b[0;36mOpsMixin.__add__\u001b[0;34m(self, other)\u001b[0m\n\u001b[1;32m     98\u001b[0m \u001b[38;5;129m@unpack_zerodim_and_defer\u001b[39m(\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124m__add__\u001b[39m\u001b[38;5;124m\"\u001b[39m)\n\u001b[1;32m     99\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m__add__\u001b[39m(\u001b[38;5;28mself\u001b[39m, other):\n\u001b[1;32m    100\u001b[0m \u001b[38;5;250m    \u001b[39m\u001b[38;5;124;03m\"\"\"\u001b[39;00m\n\u001b[1;32m    101\u001b[0m \u001b[38;5;124;03m    Get Addition of DataFrame and other, column-wise.\u001b[39;00m\n\u001b[1;32m    102\u001b[0m \n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    184\u001b[0m \u001b[38;5;124;03m    moose     3.0     NaN\u001b[39;00m\n\u001b[1;32m    185\u001b[0m \u001b[38;5;124;03m    \"\"\"\u001b[39;00m\n\u001b[0;32m--> 186\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28;43mself\u001b[39;49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_arith_method\u001b[49m\u001b[43m(\u001b[49m\u001b[43mother\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43moperator\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43madd\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/series.py:6135\u001b[0m, in \u001b[0;36mSeries._arith_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m   6133\u001b[0m \u001b[38;5;28;01mdef\u001b[39;00m \u001b[38;5;21m_arith_method\u001b[39m(\u001b[38;5;28mself\u001b[39m, other, op):\n\u001b[1;32m   6134\u001b[0m     \u001b[38;5;28mself\u001b[39m, other \u001b[38;5;241m=\u001b[39m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_align_for_op(other)\n\u001b[0;32m-> 6135\u001b[0m     \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[43mbase\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43mIndexOpsMixin\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43m_arith_method\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mother\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop\u001b[49m\u001b[43m)\u001b[49m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/base.py:1382\u001b[0m, in \u001b[0;36mIndexOpsMixin._arith_method\u001b[0;34m(self, other, op)\u001b[0m\n\u001b[1;32m   1379\u001b[0m     rvalues \u001b[38;5;241m=\u001b[39m np\u001b[38;5;241m.\u001b[39marange(rvalues\u001b[38;5;241m.\u001b[39mstart, rvalues\u001b[38;5;241m.\u001b[39mstop, rvalues\u001b[38;5;241m.\u001b[39mstep)\n\u001b[1;32m   1381\u001b[0m \u001b[38;5;28;01mwith\u001b[39;00m np\u001b[38;5;241m.\u001b[39merrstate(\u001b[38;5;28mall\u001b[39m\u001b[38;5;241m=\u001b[39m\u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mignore\u001b[39m\u001b[38;5;124m\"\u001b[39m):\n\u001b[0;32m-> 1382\u001b[0m     result \u001b[38;5;241m=\u001b[39m \u001b[43mops\u001b[49m\u001b[38;5;241;43m.\u001b[39;49m\u001b[43marithmetic_op\u001b[49m\u001b[43m(\u001b[49m\u001b[43mlvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mrvalues\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m   1384\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m \u001b[38;5;28mself\u001b[39m\u001b[38;5;241m.\u001b[39m_construct_result(result, name\u001b[38;5;241m=\u001b[39mres_name)\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/ops/array_ops.py:283\u001b[0m, in \u001b[0;36marithmetic_op\u001b[0;34m(left, right, op)\u001b[0m\n\u001b[1;32m    279\u001b[0m     _bool_arith_check(op, left, right)  \u001b[38;5;66;03m# type: ignore[arg-type]\u001b[39;00m\n\u001b[1;32m    281\u001b[0m     \u001b[38;5;66;03m# error: Argument 1 to \"_na_arithmetic_op\" has incompatible type\u001b[39;00m\n\u001b[1;32m    282\u001b[0m     \u001b[38;5;66;03m# \"Union[ExtensionArray, ndarray[Any, Any]]\"; expected \"ndarray[Any, Any]\"\u001b[39;00m\n\u001b[0;32m--> 283\u001b[0m     res_values \u001b[38;5;241m=\u001b[39m \u001b[43m_na_arithmetic_op\u001b[49m\u001b[43m(\u001b[49m\u001b[43mleft\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mright\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop\u001b[49m\u001b[43m)\u001b[49m  \u001b[38;5;66;03m# type: ignore[arg-type]\u001b[39;00m\n\u001b[1;32m    285\u001b[0m \u001b[38;5;28;01mreturn\u001b[39;00m res_values\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/ops/array_ops.py:227\u001b[0m, in \u001b[0;36m_na_arithmetic_op\u001b[0;34m(left, right, op, is_cmp)\u001b[0m\n\u001b[1;32m    219\u001b[0m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mTypeError\u001b[39;00m:\n\u001b[1;32m    220\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_cmp \u001b[38;5;129;01mand\u001b[39;00m (\n\u001b[1;32m    221\u001b[0m         left\u001b[38;5;241m.\u001b[39mdtype \u001b[38;5;241m==\u001b[39m \u001b[38;5;28mobject\u001b[39m \u001b[38;5;129;01mor\u001b[39;00m \u001b[38;5;28mgetattr\u001b[39m(right, \u001b[38;5;124m\"\u001b[39m\u001b[38;5;124mdtype\u001b[39m\u001b[38;5;124m\"\u001b[39m, \u001b[38;5;28;01mNone\u001b[39;00m) \u001b[38;5;241m==\u001b[39m \u001b[38;5;28mobject\u001b[39m\n\u001b[1;32m    222\u001b[0m     ):\n\u001b[0;32m   (...)\u001b[0m\n\u001b[1;32m    225\u001b[0m         \u001b[38;5;66;03m# Don't do this for comparisons, as that will handle complex numbers\u001b[39;00m\n\u001b[1;32m    226\u001b[0m         \u001b[38;5;66;03m#  incorrectly, see GH#32047\u001b[39;00m\n\u001b[0;32m--> 227\u001b[0m         result \u001b[38;5;241m=\u001b[39m \u001b[43m_masked_arith_op\u001b[49m\u001b[43m(\u001b[49m\u001b[43mleft\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mright\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mop\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    228\u001b[0m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    229\u001b[0m         \u001b[38;5;28;01mraise\u001b[39;00m\n","File \u001b[0;32m/opt/conda/lib/python3.10/site-packages/pandas/core/ops/array_ops.py:163\u001b[0m, in \u001b[0;36m_masked_arith_op\u001b[0;34m(x, y, op)\u001b[0m\n\u001b[1;32m    161\u001b[0m     \u001b[38;5;66;03m# See GH#5284, GH#5035, GH#19448 for historical reference\u001b[39;00m\n\u001b[1;32m    162\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m mask\u001b[38;5;241m.\u001b[39many():\n\u001b[0;32m--> 163\u001b[0m         result[mask] \u001b[38;5;241m=\u001b[39m \u001b[43mop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mxrav\u001b[49m\u001b[43m[\u001b[49m\u001b[43mmask\u001b[49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43myrav\u001b[49m\u001b[43m[\u001b[49m\u001b[43mmask\u001b[49m\u001b[43m]\u001b[49m\u001b[43m)\u001b[49m\n\u001b[1;32m    165\u001b[0m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[1;32m    166\u001b[0m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m is_scalar(y):\n","\u001b[0;31mTypeError\u001b[0m: can only concatenate list (not \"str\") to list"],"ename":"TypeError","evalue":"can only concatenate list (not \"str\") to list","output_type":"error"}]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}